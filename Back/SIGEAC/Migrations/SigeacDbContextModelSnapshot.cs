// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SIGEAC.Data;

#nullable disable

namespace SIGEAC.Migrations
{
    [DbContext(typeof(SigeacDbContext))]
    partial class SigeacDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EmpleadoEquipo", b =>
                {
                    b.Property<int>("EquipoID_Equipo")
                        .HasColumnType("int");

                    b.Property<int>("UsuariosAutorizadosID_Empleado")
                        .HasColumnType("int");

                    b.HasKey("EquipoID_Equipo", "UsuariosAutorizadosID_Empleado");

                    b.HasIndex("UsuariosAutorizadosID_Empleado");

                    b.ToTable("EmpleadoEquipo");
                });

            modelBuilder.Entity("SIGEAC.Models.Empleado", b =>
                {
                    b.Property<int>("ID_Empleado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Empleado"));

                    b.Property<string>("CorreoElectronico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DNI")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreCompleto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("ID_Empleado");

                    b.HasIndex("UsuarioId")
                        .IsUnique();

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("SIGEAC.Models.Equipo", b =>
                {
                    b.Property<int>("ID_Equipo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Equipo"));

                    b.Property<string>("Adicionales")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Antivirus")
                        .HasColumnType("bit");

                    b.Property<string>("Area")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Auriculares")
                        .HasColumnType("int");

                    b.Property<bool>("Cifrado")
                        .HasColumnType("bit");

                    b.Property<int>("Confidencialidad")
                        .HasColumnType("int");

                    b.Property<int>("Criticidad")
                        .HasColumnType("int");

                    b.Property<string>("Disco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Disponibilidad")
                        .HasColumnType("int");

                    b.Property<bool>("DisponibilidadFisica")
                        .HasColumnType("bit");

                    b.Property<int>("EmpleadoAsignadoID")
                        .HasColumnType("int");

                    b.Property<bool>("EscritorioRemoto")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaClasificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("IP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdentificadorActivo")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Integridad")
                        .HasColumnType("int");

                    b.Property<string>("MAC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Monitor")
                        .HasColumnType("int");

                    b.Property<int>("Mouse")
                        .HasColumnType("int");

                    b.Property<string>("NumeroSerie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Procesador")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PropiedadActivo")
                        .HasColumnType("bit");

                    b.Property<int>("PuestoID")
                        .HasColumnType("int");

                    b.Property<string>("RAM")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SistemaOperativo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Soporte")
                        .HasColumnType("bit");

                    b.Property<int>("Teclado")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("VPNLabs")
                        .HasColumnType("bit");

                    b.Property<string>("VersionSO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_Equipo");

                    b.HasIndex("EmpleadoAsignadoID")
                        .IsUnique();

                    b.HasIndex("IdentificadorActivo")
                        .IsUnique();

                    b.HasIndex("PuestoID")
                        .IsUnique();

                    b.ToTable("Equipos");
                });

            modelBuilder.Entity("SIGEAC.Models.Puesto", b =>
                {
                    b.Property<int>("ID_Puesto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Puesto"));

                    b.Property<int?>("EmpleadoID")
                        .HasColumnType("int");

                    b.Property<int?>("EquipoID")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_Puesto");

                    b.HasIndex("EmpleadoID");

                    b.ToTable("Puestos");
                });

            modelBuilder.Entity("SIGEAC.Models.Usuario", b =>
                {
                    b.Property<int>("ID_Usuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Usuario"));

                    b.Property<string>("Contraseña")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_Usuario");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("EmpleadoEquipo", b =>
                {
                    b.HasOne("SIGEAC.Models.Equipo", null)
                        .WithMany()
                        .HasForeignKey("EquipoID_Equipo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SIGEAC.Models.Empleado", null)
                        .WithMany()
                        .HasForeignKey("UsuariosAutorizadosID_Empleado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SIGEAC.Models.Empleado", b =>
                {
                    b.HasOne("SIGEAC.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SIGEAC.Models.Equipo", b =>
                {
                    b.HasOne("SIGEAC.Models.Empleado", "EmpleadoAsignado")
                        .WithOne()
                        .HasForeignKey("SIGEAC.Models.Equipo", "EmpleadoAsignadoID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SIGEAC.Models.Puesto", "Puesto")
                        .WithOne("Equipo")
                        .HasForeignKey("SIGEAC.Models.Equipo", "PuestoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmpleadoAsignado");

                    b.Navigation("Puesto");
                });

            modelBuilder.Entity("SIGEAC.Models.Puesto", b =>
                {
                    b.HasOne("SIGEAC.Models.Empleado", "Empleado")
                        .WithMany()
                        .HasForeignKey("EmpleadoID");

                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("SIGEAC.Models.Puesto", b =>
                {
                    b.Navigation("Equipo");
                });
#pragma warning restore 612, 618
        }
    }
}
